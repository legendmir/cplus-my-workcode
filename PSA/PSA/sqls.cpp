#include"sqls.h"



c_sql::c_sql()
{
	sql_info xx;
	xx.name = "PORTAL";
	xx.sql = "SELECT * FROM GETVEHSSCREEN(3, '''AP'', ''AC'', ''PP2000'', ''LEXIA'', ''ADF'', ''ADS''', '''RA''', '0'); ";
	sql_map[st_veh_info] = xx;


	xx.name = "PORTAL";
	xx.sql = "SELECT * FROM GETMODARCS (x_x); ";
	sql_map[st_veh_comtype] = xx;


	xx.name = "REF_FAM_VEH";
	xx.sql = "SELECT p.FAMILYNAME, p.FAMILYLABEL, p.OPT, p.PATH, p.FILENAME, p.ICONOK, p.ICONKO, p.UNDEFINE FROM GET_ALL_REF_DATA('x_x', 'x_x') p";;
	sql_map[st_ecu_info] = xx;


	xx.name = "GPC";
	xx.sql = "SELECT * FROM vehicule WHERE (VEHCOMTYPE = 'x_x') ";
	sql_map[st_veh_id] = xx;


	xx.name = "GPC";
	xx.sql = "select * from RECO r where r.ECUID=x_x and r.RECECUMNEMONAME='x_x' ";
	sql_map[st_ecu_descript_info] = xx;


	xx.name = "GPC";
	xx.sql = "SELECT * FROM family, famtype WHERE ((VEHID = x_x) AND (family.FAMTYID = famtype.FAMTYID)) And famtype.FAMNAME = 'x_x'";
	sql_map[st_ecu_protcol] = xx;

	
	xx.name = "GPC";
	xx.sql = "SELECT p.ECUNAME, p.VARIANTES, p.ECUID FROM GET_VARIANTES_LIST('x_x') p ";
	sql_map[st_ecu_variant_list] = xx;

	
	xx.name = "DSD";
	xx.sql = "SELECT p.ECUNAME, p.ECUVEFILENAME, p.ECUVEID, p.VARIANTENAME, p.REQUESTRECOFRAME, p.ANSWEROKRECOFRAME, p.ANSWERKORECOFRAME, p.REQUESTINITFRAME, p.ANSWEROKINITFRAME, p.ANSWERKOINITFRAME, p.REQUESTFINDIAGFRAME, p.ANSWEROKFINDIAGFRAME, p.ANSWERKOFINDIAGFRAME, p.NBR_RECO_TOTAL, p.NBR_RECO_REQUEST, p.PARSNAME, p.IDEMNEMOVALUE, p.ISPBYTEPOS, p.ISPBYTELENGTH FROM GET_ALL_RECO_INFO('''x_x''') p";
	sql_map[st_ecu_variant_list_all] = xx;

	
	xx.name = "GPC";
	xx.sql = "select * from screen where screen.ecuid=x_x and screen.scrname = 'x_x' ";
	sql_map[st_ecu_identification] = xx;

	
	xx.name = "GPC";
	xx.sql = "SELECT PARAM.*, I_SCRPAR.SCRID, I_SCRPAR.PARPOS  FROM PARAM, I_SCRPAR  WHERE (I_SCRPAR.SCRID = x_x)  AND I_SCRPAR.PARID = PARAM.PARID  ORDER BY I_SCRPAR.PARPOS ASC ";
	sql_map[st_id_data_stream] = xx;


	xx.name = "DSD";
	xx.sql = "SELECT su.SERUNID, p.PARSNAME FROM I_ECUSER ie INNER JOIN SERVICE s ON ie.SERID = s.SERID INNER JOIN SERVUNIT su ON s.SERID = su.SERID INNER JOIN SERVUNITFRAME sf ON su.SERUNID = sf.SERUNID INNER JOIN I_SERPAR isp ON sf.SERUNFRID = isp.SERUNFRID INNER JOIN PARAM p ON isp.PARID = p.PARID WHERE ie.ECUVEID='x_x' AND sf.SERUNFRTYID=1 AND s.SERSNAME IN ('RDBLID', 'RECUID', 'MODE01', 'MODEA4', 'RDBI', 'SRBLID') AND p.PARSNAME IN ('x_x') AND (isp.PARID IS NOT NULL OR isp.CRCID IS NOT NULL OR isp.MAPID IS NOT NULL) ";
	sql_map[st_data_stream_serun_id] = xx;


	xx.name = "DSD";
	xx.sql = "SELECT distinct sf.SERUNFRTYID, su.SERUNID , sf.SERUNFRDESCRIPTION, sf.SERUNFRID FROM SERVUNIT su inner join SERVUNITFRAME sf on su.SERUNID = sf.SERUNID where su.SERUNID = x_x ";
	sql_map[st_data_stream_serunfr_id] = xx;

	
	xx.name = "DSD";
	xx.sql = "SELECT isp.SERUNFRID, isp.PARID, isp.ISPBYTEPOS, isp.ISPVALUE, isp.BLOID, pt.PARTYNAME, pt.PARTYID, p.PARSNAME, p.PARLNAME, p.PARDESCRIPTION, p.PARENCODING, p.PARTYPE, p.PARBASEENCODING, p.PARINTERNALENCODING, p.PARPHYSICALENCODING, p.PARCOMPUTMETHOD, dt.DATTYID, dt.DATTYNAME, ad.ADDABSOLUTENUMBER, ad.ADDBYTELENGTH, ad.ADDBYTEORDER, ad.ADDBITLENGTH, ad.ADDBITMASK, ad.ADDBITCONDENSED, ad.ADDMAXLENGTH, ad.ADDMINLENGTH, ad.ADDTERMINATION, ad.ADDBITPARAMREF, adt.ADDTYNAME, adt.ADDTYID, c.CRCSNAME, c.CRCLNAME, c.CRCDESCRIPTION, c.CRCFIRSTBYTE, c.CRCLASTBYTE, c.CRCPOLYNOM, c.CRCBYTELENGTH, c.CRCBLOCKNAME, bl.BLOSNAME, bl.BLODESCRIPTION, bl.BLOBYTEPOS, bl.BLOMINOCCURS, bl.BLOMAXOCCURS, bl.BLOBYTELENGTH, bl.ENDOFPDU, mp.MAPSNAME, mp.MAPLNAME, mp.MAPDESCRIPTION, mp.MAPLID, mp.MAPID, db.DYNSNAME, db.DYNBYTEPOS, db.DYNID, db.DYNBYTELENGTH FROM PARTYPE pt INNER JOIN I_SERPAR isp ON isp.PARTYID = pt.PARTYID LEFT OUTER JOIN (PARAM p  INNER JOIN DATATYPE dt ON p.DATTYID = dt.DATTYID) ON isp.PARID = p.PARID LEFT OUTER JOIN ADDDATA ad ON isp.PARID = ad.PARID LEFT OUTER JOIN ADDTYPE adt ON ad.ADDTYID = adt.ADDTYID LEFT OUTER JOIN BLOCK bl ON isp.BLOID = bl.BLOID LEFT OUTER JOIN DYNAMICBLOCK db ON isp.DYNID = db.DYNID LEFT OUTER JOIN CRC c ON isp.CRCID = c.CRCID LEFT OUTER JOIN MAPPED mp ON isp.MAPID = mp.MAPID WHERE (isp.SERUNFRID = x_x) and ((isp.PARID is not null) OR (isp.CRCID is not null) OR (isp.MAPID is not null)) ";
	sql_map[st_data_stream_request_info] = xx;

	xx.name = "DSD";
	xx.sql = "SELECT isp.SERUNFRID, isp.PARID, isp.ISPBYTEPOS, isp.ISPVALUE, isp.BLOID, pt.PARTYNAME, pt.PARTYID, p.PARSNAME, p.PARLNAME, p.PARDESCRIPTION, p.PARENCODING, p.PARTYPE, p.PARBASEENCODING, p.PARINTERNALENCODING, p.PARPHYSICALENCODING, p.PARCOMPUTMETHOD, dt.DATTYID, dt.DATTYNAME, ad.ADDABSOLUTENUMBER, ad.ADDBYTELENGTH, ad.ADDBYTEORDER, ad.ADDBITLENGTH, ad.ADDBITMASK, ad.ADDBITCONDENSED, ad.ADDMAXLENGTH, ad.ADDMINLENGTH, ad.ADDTERMINATION, ad.ADDBITPARAMREF, adt.ADDTYNAME, adt.ADDTYID, c.CRCSNAME, c.CRCLNAME, c.CRCDESCRIPTION, c.CRCFIRSTBYTE, c.CRCLASTBYTE, c.CRCPOLYNOM, c.CRCBYTELENGTH, c.CRCBLOCKNAME, bl.BLOSNAME, bl.BLODESCRIPTION, bl.BLOBYTEPOS, bl.BLOMINOCCURS, bl.BLOMAXOCCURS, bl.BLOBYTELENGTH, bl.ENDOFPDU, mp.MAPSNAME, mp.MAPLNAME, mp.MAPDESCRIPTION, mp.MAPLID, mp.MAPID, db.DYNSNAME, db.DYNBYTEPOS, db.DYNID, db.DYNBYTELENGTH FROM PARTYPE pt INNER JOIN I_SERPAR isp ON isp.PARTYID = pt.PARTYID LEFT OUTER JOIN (PARAM p  INNER JOIN DATATYPE dt ON p.DATTYID = dt.DATTYID) ON isp.PARID = p.PARID LEFT OUTER JOIN ADDDATA ad ON isp.PARID = ad.PARID LEFT OUTER JOIN ADDTYPE adt ON ad.ADDTYID = adt.ADDTYID LEFT OUTER JOIN BLOCK bl ON isp.BLOID = bl.BLOID LEFT OUTER JOIN DYNAMICBLOCK db ON isp.DYNID = db.DYNID LEFT OUTER JOIN CRC c ON isp.CRCID = c.CRCID LEFT OUTER JOIN MAPPED mp ON isp.MAPID = mp.MAPID WHERE (isp.SERUNFRID = x_x) and ((isp.PARID is not null) OR (isp.CRCID is not null) OR (isp.MAPID is not null)) ";
	sql_map[st_data_stream_receive_info] = xx;


	xx.name = "GPC";
	xx.sql = "SELECT DISCVAL.*,I_PARDIS.PARID,I_PARDIS.OUTOFRANGE  FROM I_SCRPAR, PARAM, I_PARDIS, DISCVAL  WHERE I_SCRPAR.SCRID =x_x  AND I_SCRPAR.PARID=x_x AND I_SCRPAR.PARID=PARAM.PARID  AND PARAM.PARID=I_PARDIS.PARID  AND I_PARDIS.DISCID=DISCVAL.DISCID ";
	sql_map[st_data_stream_state_disc] = xx;


	xx.name = "DSD";
	xx.sql = "SELECT su.SERUNID, p.PARSNAME FROM I_ECUSER ie INNER JOIN SERVICE s ON ie.SERID = s.SERID INNER JOIN SERVUNIT su ON s.SERID = su.SERID INNER JOIN SERVUNITFRAME sf ON su.SERUNID = sf.SERUNID INNER JOIN I_SERPAR isp ON sf.SERUNFRID = isp.SERUNFRID INNER JOIN PARAM p ON isp.PARID = p.PARID WHERE ie.ECUVEID=x_x AND sf.SERUNFRTYID=1 AND s.SERSNAME IN ('RDBLID', 'RECUID', 'MODE01', 'MODEA4', 'RDBI', 'SRBLID') AND p.PARSNAME IN ('x_x') AND (isp.PARID IS NOT NULL OR isp.CRCID IS NOT NULL OR isp.MAPID IS NOT NULL)";
	sql_map[st_data_stream_line_disc] = xx;

	xx.name = "DSD";
	xx.sql = "select * from CONVFORM co, CONFORMTYPE cft  where co.CONTYID = cft.CONTYID and co.parid=x_x ";
	sql_map[st_data_stream_algorithm] = xx;

	xx.name = "DSD";
	xx.sql = "select * from CONVFORM co, CONFORMTYPE cft  where co.CONTYID = cft.CONTYID";
	sql_map[st_gloabl_conver] = xx;


	xx.name = "DSD";
	xx.sql = "SELECT s.SERID, s.SERDESCRIPTION, s.SERLNAME FROM SERVICE s inner join I_ECUSER i on s.serid = i.serid where i.ECUVEID =x_x and (SERSNAME='RDSDTC' or SERSNAME='RDDTCS'or SERSNAME='RSDTC'or SERSNAME='RSDTC_VA')";
	sql_map[st_dtc_serid] = xx;

	xx.name = "DSD";
	xx.sql = "SELECT s.SERID, s.SERSNAME, s.SERLNAME, s.SERDESCRIPTION, su.SERUNID, su.SERUNTYPE, su.SERUNDESCRIPTION, su.SERUNRECEIVECYCLES, su.SERUNSENDCYCLES, su.SERUNTIMECYCLES, sf.SERUNFRID, sf.SERUNFRTYID, sf.SERUNFRDESCRIPTION, isp.I_SERPARID, isp.PARID, isp.ISPBYTEPOS, isp.ISPVALUE, isp.ISPNUMBER, isp.BLOID FROM SERVICE s INNER JOIN SERVUNIT su on s.SERID = su.SERID INNER JOIN SERVUNITFRAME sf on su.SERUNID = sf.SERUNID INNER JOIN I_SERPAR isp on sf.SERUNFRID = isp.SERUNFRID WHERE s.SERID=x_x and isp.ISPBYTEPOS=2 and sf.serunfrtyid=0 and (su.SERUNSNAME='RDSDTC' or su.SERUNSNAME='RDDTCS' or su.SERUNSNAME='RSDTC'or su.SERUNSNAME='RSDTC_VA') and ((isp.PARID is not null) OR (isp.CRCID is not null) OR (isp.MAPID is not null)) ";
	sql_map[st_dtc_serunid] = xx;

	xx.name = "DSD";
	xx.sql = "SELECT distinct sf.SERUNFRTYID, su.SERUNID , sf.SERUNFRDESCRIPTION, sf.SERUNFRID FROM SERVUNIT su inner join SERVUNITFRAME sf on su.SERUNID = sf.SERUNID where su.SERUNID = x_x ";
	sql_map[st_dtc_serunfrid] = xx;

	xx.name = "DSD";
	xx.sql = "SELECT isp.SERUNFRID, isp.PARID, isp.ISPBYTEPOS, isp.ISPVALUE, isp.BLOID, pt.PARTYNAME, pt.PARTYID, p.PARSNAME, p.PARLNAME, p.PARDESCRIPTION, p.PARENCODING, p.PARTYPE, p.PARBASEENCODING, p.PARINTERNALENCODING, p.PARPHYSICALENCODING, p.PARCOMPUTMETHOD, dt.DATTYID, dt.DATTYNAME, ad.ADDABSOLUTENUMBER, ad.ADDBYTELENGTH, ad.ADDBYTEORDER, ad.ADDBITLENGTH, ad.ADDBITMASK, ad.ADDBITCONDENSED, ad.ADDMAXLENGTH, ad.ADDMINLENGTH, ad.ADDTERMINATION, ad.ADDBITPARAMREF, adt.ADDTYNAME, adt.ADDTYID, c.CRCSNAME, c.CRCLNAME, c.CRCDESCRIPTION, c.CRCFIRSTBYTE, c.CRCLASTBYTE, c.CRCPOLYNOM, c.CRCBYTELENGTH, c.CRCBLOCKNAME, bl.BLOSNAME, bl.BLODESCRIPTION, bl.BLOBYTEPOS, bl.BLOMINOCCURS, bl.BLOMAXOCCURS, bl.BLOBYTELENGTH, bl.ENDOFPDU, mp.MAPSNAME, mp.MAPLNAME, mp.MAPDESCRIPTION, mp.MAPLID, mp.MAPID, db.DYNSNAME, db.DYNBYTEPOS, db.DYNID, db.DYNBYTELENGTH FROM PARTYPE pt INNER JOIN I_SERPAR isp ON isp.PARTYID = pt.PARTYID LEFT OUTER JOIN (PARAM p  INNER JOIN DATATYPE dt ON p.DATTYID = dt.DATTYID) ON isp.PARID = p.PARID LEFT OUTER JOIN ADDDATA ad ON isp.PARID = ad.PARID LEFT OUTER JOIN ADDTYPE adt ON ad.ADDTYID = adt.ADDTYID LEFT OUTER JOIN BLOCK bl ON isp.BLOID = bl.BLOID LEFT OUTER JOIN DYNAMICBLOCK db ON isp.DYNID = db.DYNID LEFT OUTER JOIN CRC c ON isp.CRCID = c.CRCID LEFT OUTER JOIN MAPPED mp ON isp.MAPID = mp.MAPID WHERE (isp.SERUNFRID = x_x) and ((isp.PARID is not null) OR (isp.CRCID is not null) OR (isp.MAPID is not null)) ";
	sql_map[st_dtc_req_cmd] = xx;

	xx.name = "DSD";
	xx.sql = "SELECT isp.SERUNFRID, isp.PARID, isp.ISPBYTEPOS, isp.ISPVALUE, isp.BLOID, pt.PARTYNAME, pt.PARTYID, p.PARSNAME, p.PARLNAME, p.PARDESCRIPTION, p.PARENCODING, p.PARTYPE, p.PARBASEENCODING, p.PARINTERNALENCODING, p.PARPHYSICALENCODING, p.PARCOMPUTMETHOD, dt.DATTYID, dt.DATTYNAME, ad.ADDABSOLUTENUMBER, ad.ADDBYTELENGTH, ad.ADDBYTEORDER, ad.ADDBITLENGTH, ad.ADDBITMASK, ad.ADDBITCONDENSED, ad.ADDMAXLENGTH, ad.ADDMINLENGTH, ad.ADDTERMINATION, ad.ADDBITPARAMREF, adt.ADDTYNAME, adt.ADDTYID, c.CRCSNAME, c.CRCLNAME, c.CRCDESCRIPTION, c.CRCFIRSTBYTE, c.CRCLASTBYTE, c.CRCPOLYNOM, c.CRCBYTELENGTH, c.CRCBLOCKNAME, bl.BLOSNAME, bl.BLODESCRIPTION, bl.BLOBYTEPOS, bl.BLOMINOCCURS, bl.BLOMAXOCCURS, bl.BLOBYTELENGTH, bl.ENDOFPDU, mp.MAPSNAME, mp.MAPLNAME, mp.MAPDESCRIPTION, mp.MAPLID, mp.MAPID, db.DYNSNAME, db.DYNBYTEPOS, db.DYNID, db.DYNBYTELENGTH FROM PARTYPE pt INNER JOIN I_SERPAR isp ON isp.PARTYID = pt.PARTYID LEFT OUTER JOIN (PARAM p  INNER JOIN DATATYPE dt ON p.DATTYID = dt.DATTYID) ON isp.PARID = p.PARID LEFT OUTER JOIN ADDDATA ad ON isp.PARID = ad.PARID LEFT OUTER JOIN ADDTYPE adt ON ad.ADDTYID = adt.ADDTYID LEFT OUTER JOIN BLOCK bl ON isp.BLOID = bl.BLOID LEFT OUTER JOIN DYNAMICBLOCK db ON isp.DYNID = db.DYNID LEFT OUTER JOIN CRC c ON isp.CRCID = c.CRCID LEFT OUTER JOIN MAPPED mp ON isp.MAPID = mp.MAPID WHERE (isp.SERUNFRID = x_x) and ((isp.PARID is not null) OR (isp.CRCID is not null) OR (isp.MAPID is not null)) ";
	sql_map[st_dtc_rec_info] = xx;

	xx.name = "GPC";
	xx.sql = "SELECT dtc.DTCCODE, scr.SCRNAME FROM ECU ecu, I_ECUGRPDTC iecugrpdtc, I_ECUDTC iecudtc, DTC dtc, SCREEN scr WHERE ecu.ECUID IN (x_x)  AND ecu.I_ECUGRPDTCID = iecugrpdtc.I_ECUGRPDTCID  AND iecugrpdtc.I_ECUGRPDTCID = iecudtc.I_ECUGRPDTCID  AND dtc.DTCID = iecudtc.DTCID  AND scr.SCRID = iecudtc.SCRID  ORDER BY DTCCODE ASC  ";
	sql_map[st_dtc_scrname] = xx;

	xx.name = "GPC";
	xx.sql = "select * from screen where screen.ecuid=x_x and screen.scrname = 'x_x' ";
	sql_map[st_dtc_scrid] = xx;

	xx.name = "GPC";
	xx.sql = "select * from I_ECUDTC,DTC where I_ECUDTC.SCRID = x_x and DTC.DTCID = I_ECUDTC.DTCID";
	sql_map[st_dtc_lib] = xx;

	xx.name = "DSD";
	xx.sql = "SELECT s.SERID, s.SERDESCRIPTION, s.SERLNAME FROM SERVICE s inner join I_ECUSER i on s.serid = i.serid where i.ECUVEID =x_x and (SERSNAME='CDBLID' or SERSNAME='CDTCI' or SERSNAME='CLRDI' or SERSNAME='CLRDTC' or SERSNAME='CLRDTI')";
	sql_map[st_dtc_clr_serid] = xx;

	xx.name = "DSD";
	xx.sql = "SELECT s.SERID, s.SERSNAME, s.SERLNAME, s.SERDESCRIPTION, su.SERUNID, su.SERUNTYPE, su.SERUNDESCRIPTION, su.SERUNRECEIVECYCLES, su.SERUNSENDCYCLES, su.SERUNTIMECYCLES, sf.SERUNFRID, sf.SERUNFRTYID, sf.SERUNFRDESCRIPTION, isp.I_SERPARID, isp.PARID, isp.ISPBYTEPOS, isp.ISPVALUE, isp.ISPNUMBER, isp.BLOID FROM SERVICE s INNER JOIN SERVUNIT su on s.SERID = su.SERID INNER JOIN SERVUNITFRAME sf on su.SERUNID = sf.SERUNID INNER JOIN I_SERPAR isp on sf.SERUNFRID = isp.SERUNFRID WHERE s.SERID=x_x and isp.ISPBYTEPOS=2 and sf.serunfrtyid=0 and (SERSNAME='CDBLID' or SERSNAME='CDTCI' or SERSNAME='CLRDI' or SERSNAME='CLRDTC' or SERSNAME='CLRDTI') and ((isp.PARID is not null) OR (isp.CRCID is not null) OR (isp.MAPID is not null))";	
	sql_map[st_dtc_clr_serunfrid] = xx;

	xx.name = "DSD";
	xx.sql = "SELECT isp.SERUNFRID, isp.PARID, isp.ISPBYTEPOS, isp.ISPVALUE, isp.BLOID, pt.PARTYNAME, pt.PARTYID, p.PARSNAME, p.PARLNAME, p.PARDESCRIPTION, p.PARENCODING, p.PARTYPE, p.PARBASEENCODING, p.PARINTERNALENCODING, p.PARPHYSICALENCODING, p.PARCOMPUTMETHOD, dt.DATTYID, dt.DATTYNAME, ad.ADDABSOLUTENUMBER, ad.ADDBYTELENGTH, ad.ADDBYTEORDER, ad.ADDBITLENGTH, ad.ADDBITMASK, ad.ADDBITCONDENSED, ad.ADDMAXLENGTH, ad.ADDMINLENGTH, ad.ADDTERMINATION, ad.ADDBITPARAMREF, adt.ADDTYNAME, adt.ADDTYID, c.CRCSNAME, c.CRCLNAME, c.CRCDESCRIPTION, c.CRCFIRSTBYTE, c.CRCLASTBYTE, c.CRCPOLYNOM, c.CRCBYTELENGTH, c.CRCBLOCKNAME, bl.BLOSNAME, bl.BLODESCRIPTION, bl.BLOBYTEPOS, bl.BLOMINOCCURS, bl.BLOMAXOCCURS, bl.BLOBYTELENGTH, bl.ENDOFPDU, mp.MAPSNAME, mp.MAPLNAME, mp.MAPDESCRIPTION, mp.MAPLID, mp.MAPID, db.DYNSNAME, db.DYNBYTEPOS, db.DYNID, db.DYNBYTELENGTH FROM PARTYPE pt INNER JOIN I_SERPAR isp ON isp.PARTYID = pt.PARTYID LEFT OUTER JOIN (PARAM p  INNER JOIN DATATYPE dt ON p.DATTYID = dt.DATTYID) ON isp.PARID = p.PARID LEFT OUTER JOIN ADDDATA ad ON isp.PARID = ad.PARID LEFT OUTER JOIN ADDTYPE adt ON ad.ADDTYID = adt.ADDTYID LEFT OUTER JOIN BLOCK bl ON isp.BLOID = bl.BLOID LEFT OUTER JOIN DYNAMICBLOCK db ON isp.DYNID = db.DYNID LEFT OUTER JOIN CRC c ON isp.CRCID = c.CRCID LEFT OUTER JOIN MAPPED mp ON isp.MAPID = mp.MAPID WHERE (isp.SERUNFRID = x_x) and ((isp.PARID is not null) OR (isp.CRCID is not null) OR (isp.MAPID is not null)) ";
	sql_map[st_dtc_clr_cmd] = xx;

	xx.name = "GPC";
	xx.sql = "SELECT dtc.DTCCODE, dtc.DTCNAME, dtc.DTCLABEL, dtc.DTCDESCRIPTION, dtc.DTCHELP, pro.PRONAME, pro.PRODSDNAME, pro.PROTYPE, pro.PROLABEL, pro.PROALLDTC, proval.PROVALTYPE, proval.PROVALNAME, proval.PROVALLABEL FROM ECU ecu INNER JOIN  (I_ECUGRPDTC iecugrpdtc INNER JOIN  (I_ECUDTC iecudtc INNER JOIN  (DTC dtc INNER JOIN  (I_DTCPRO idtcpro INNER JOIN  (DTCPROPERTY pro INNER JOIN  (I_PROVAL iproval INNER JOIN  DTCPROPERTYVALUE proval  ON iproval.PROVALID = proval.PROVALID)  ON pro.PROID = iproval.PROID)  ON pro.PROID = idtcpro.PROID)  ON dtc.DTCID = idtcpro.DTCID)  ON dtc.DTCID = iecudtc.DTCID)  ON ecu.I_ECUGRPDTCID = iecugrpdtc.I_ECUGRPDTCID)  ON iecugrpdtc.I_ECUGRPDTCID = iecudtc.I_ECUGRPDTCID WHERE ecu.ECUID IN (x_x) UNION ALL SELECT dtc.DTCCODE, dtc.DTCNAME, dtc.DTCLABEL, dtc.DTCDESCRIPTION, dtc.DTCHELP, CAST (NULL AS VARCHAR(64)), CAST (NULL AS VARCHAR(32)), CAST (NULL AS VARCHAR(16)), CAST (NULL AS VARCHAR(255)), CAST (NULL AS SMALLINT), CAST (NULL AS VARCHAR(32)), CAST (NULL AS VARCHAR(64)), CAST (NULL AS VARCHAR(255)) FROM ECU ecu INNER JOIN  (I_ECUGRPDTC iecugrpdtc INNER JOIN  (I_ECUDTC iecudtc INNER JOIN  DTC dtc  ON dtc.DTCID = iecudtc.DTCID)  ON ecu.I_ECUGRPDTCID = iecugrpdtc.I_ECUGRPDTCID)  ON iecugrpdtc.I_ECUGRPDTCID = iecudtc.I_ECUGRPDTCID WHERE ecu.ECUID IN (x_x)   AND NOT EXISTS (SELECT 1 FROM I_DTCPRO idtcpro WHERE idtcpro.DTCID = dtc.DTCID)  ";
	sql_map[st_dtc_newlib] = xx;
}
string c_sql::replace_parm(string& ori_val, vector<string>& vec_val)
{
	unsigned int i = 0;
	std::string::size_type   pos(0);
	string old_value = "x_x";
	for (i = 0;i < vec_val.size();i++)
	{
		if ((pos = ori_val.find(old_value)) != std::string::npos)
		{
			ori_val.replace(pos, old_value.length(), vec_val[i]);
		}
	}
	return   ori_val;
}
